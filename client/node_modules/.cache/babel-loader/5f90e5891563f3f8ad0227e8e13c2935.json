{"ast":null,"code":"var _jsxFileName = \"/Users/raiyan0islam/CSE316HW3Mongo/Playlister_HW3/client/src/components/SongCard.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport { GlobalStoreContext } from '../store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SongCard(props) {\n  _s();\n  const {\n    store\n  } = useContext(GlobalStoreContext);\n  function handleDragStart(event) {\n    event.dataTransfer.setData(\"song\", index);\n  }\n  function handleDragOver(event) {\n    event.preventDefault();\n  }\n  function handleDragEnter(event) {\n    event.preventDefault();\n  }\n  function handleDragLeave(event) {\n    event.preventDefault();\n  }\n  function handleDrop(event) {\n    event.preventDefault();\n    let targetIndex = index;\n    let sourceIndex = Number(event.dataTransfer.getData(\"song\"));\n\n    // ASK THE MODEL TO MOVE THE DATA\n    store.moveSong(sourceIndex, targetIndex);\n  }\n  const handleEditSong = event => {\n    event.preventDefault();\n    // THIS FUNCTION SHOWS THE MODAL FOR PROMPTING THE USER\n    // TO SEE IF THEY REALLY WANT TO EDIT THE SONG\n    const showEditSongModal = () => {\n      let modal = document.getElementById(\"edit-song-modal\");\n      modal.classList.add(\"is-visible\");\n    };\n    store.selectSong(index);\n    showEditSongModal();\n  };\n  async function handleRemove(event) {\n    event.stopPropagation();\n    let _id = event.target.id;\n    _id = (\"\" + _id).substring(\"remove-song-\".length);\n    store.markSongForDeletion(_id);\n  }\n  const {\n    song,\n    index\n  } = props;\n  let cardClass = \"list-card unselected-list-card\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"song-\" + index + \"-card\",\n    className: cardClass,\n    onDragStart: handleDragStart,\n    onDragOver: handleDragOver,\n    onDragEnter: handleDragEnter,\n    onDragLeave: handleDragLeave,\n    onDrop: handleDrop,\n    onDoubleClick: handleEditSong,\n    onClick: handleRemove,\n    draggable: \"true\",\n    children: [index + 1, \".\", /*#__PURE__*/_jsxDEV(\"a\", {\n      id: \"song-\" + index + \"-link\",\n      className: \"song-link\",\n      href: \"https://www.youtube.com/watch?v=\" + song.youTubeId,\n      children: [song.title, \" by \", song.artist]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      id: \"remove-song-\" + index,\n      className: \"list-card-button\",\n      value: \"\\u2715\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 7\n  }, this);\n}\n_s(SongCard, \"73C7T2gc7osE0gOE4ApLm9/B7dk=\");\n_c = SongCard;\nexport default SongCard;\nvar _c;\n$RefreshReg$(_c, \"SongCard\");","map":{"version":3,"names":["React","useContext","useState","GlobalStoreContext","SongCard","props","store","handleDragStart","event","dataTransfer","setData","index","handleDragOver","preventDefault","handleDragEnter","handleDragLeave","handleDrop","targetIndex","sourceIndex","Number","getData","moveSong","handleEditSong","showEditSongModal","modal","document","getElementById","classList","add","selectSong","handleRemove","stopPropagation","_id","target","id","substring","length","markSongForDeletion","song","cardClass","youTubeId","title","artist"],"sources":["/Users/raiyan0islam/CSE316HW3Mongo/Playlister_HW3/client/src/components/SongCard.js"],"sourcesContent":["import React, { useContext, useState } from 'react'\nimport { GlobalStoreContext } from '../store'\n\nfunction SongCard(props) {\n    const { store } = useContext(GlobalStoreContext);\n\n    function handleDragStart(event) {\n      event.dataTransfer.setData(\"song\", index);\n    }\n\n    function handleDragOver(event) {\n      event.preventDefault();\n    }\n\n    function handleDragEnter(event) {\n      event.preventDefault();\n    }\n\n    function handleDragLeave(event) {\n      event.preventDefault();\n    }\n\n    function handleDrop(event) {\n      event.preventDefault();\n      let targetIndex = index;\n      let sourceIndex = Number(event.dataTransfer.getData(\"song\"));\n\n      // ASK THE MODEL TO MOVE THE DATA\n      store.moveSong(sourceIndex, targetIndex);\n    }\n\n    const handleEditSong = (event) => {\n      event.preventDefault();\n      // THIS FUNCTION SHOWS THE MODAL FOR PROMPTING THE USER\n      // TO SEE IF THEY REALLY WANT TO EDIT THE SONG\n      const showEditSongModal = () => {\n        let modal = document.getElementById(\"edit-song-modal\");\n        modal.classList.add(\"is-visible\");\n      };\n      store.selectSong(index);\n      showEditSongModal();\n    };\n\n    async function handleRemove(event) {\n      event.stopPropagation();\n      let _id = event.target.id;\n      _id = (\"\" + _id).substring(\"remove-song-\".length);\n      store.markSongForDeletion(_id);\n    }\n\n\n\n    const { song, index } = props;\n    let cardClass = \"list-card unselected-list-card\";\n    return (\n      <div\n        key={index}\n        id={\"song-\" + index + \"-card\"}\n        className={cardClass}\n        onDragStart={handleDragStart}\n        onDragOver={handleDragOver}\n        onDragEnter={handleDragEnter}\n        onDragLeave={handleDragLeave}\n        onDrop={handleDrop}\n        onDoubleClick={handleEditSong}\n        onClick={handleRemove}\n        draggable=\"true\"\n      >\n        {index + 1}.\n        <a\n          id={\"song-\" + index + \"-link\"}\n          className=\"song-link\"\n          href={\"https://www.youtube.com/watch?v=\" + song.youTubeId}\n        >\n          {song.title} by {song.artist}\n        </a>\n        <input\n          type=\"button\"\n          id={\"remove-song-\" + index}\n          className=\"list-card-button\"\n          value={\"\\u2715\"}\n        />\n      </div>\n    );\n}\n\nexport default SongCard;"],"mappings":"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"},"metadata":{},"sourceType":"module"}